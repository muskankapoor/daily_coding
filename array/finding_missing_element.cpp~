// find missing element of second array shuffling and mixed rnaodm eleents

#include <iostream>
#include <algorithm>
#include <vector>


using namespace std;


int missingElement(vector<int> vect, vector<int> vect1){

  sort(vect.being(), vect.end());
  sort(vect1.begin(), vect1.end());

  for (int i = 0; i < vect.size(); i++){
    for (int j = 0; j < vect.size(); ++j) {

      if (vect[i] != vect[j]){
	return vect[i];
      }
      
    }

  }
  
  
}

int main(){

  vector<int> vect;
  vect.push_back(5);
  vect.push_back(1);
  vect.push_back(9);
  vect.push_back(0);
  vect.push_back(2);
  vect.push_back(2);

  vector<int> vect1;
  vect1.push_back(2);
  vect1.push_back(5);
  vect1.push_back(1);
  vect1.push_back(9);
  vect1.push_back(0);
  vect1.push_back(2);


  cout << missingElement(vect, vect1);

  
  

  
}
